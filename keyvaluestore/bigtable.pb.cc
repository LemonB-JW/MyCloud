// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bigtable.proto

#include "bigtable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_bigtable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_fileMetaData_bigtable_2eproto;
namespace bigtable {
class PutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutRequest> _instance;
} _PutRequest_default_instance_;
class PutReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutReply> _instance;
} _PutReply_default_instance_;
class GetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRequest> _instance;
} _GetRequest_default_instance_;
class GetReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetReply> _instance;
} _GetReply_default_instance_;
class CPutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPutRequest> _instance;
} _CPutRequest_default_instance_;
class CPutReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPutReply> _instance;
} _CPutReply_default_instance_;
class DelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelRequest> _instance;
} _DelRequest_default_instance_;
class DelReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelReply> _instance;
} _DelReply_default_instance_;
class fileMetaDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<fileMetaData> _instance;
} _fileMetaData_default_instance_;
class GetEmailListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetEmailListRequest> _instance;
} _GetEmailListRequest_default_instance_;
class GetEmailListReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetEmailListReply> _instance;
} _GetEmailListReply_default_instance_;
class GetFileListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFileListRequest> _instance;
} _GetFileListRequest_default_instance_;
class GetFileListReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFileListReply> _instance;
} _GetFileListReply_default_instance_;
}  // namespace bigtable
static void InitDefaultsPutRequest_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_PutRequest_default_instance_;
    new (ptr) ::bigtable::PutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::PutRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PutRequest_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPutRequest_bigtable_2eproto}, {}};

static void InitDefaultsPutReply_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_PutReply_default_instance_;
    new (ptr) ::bigtable::PutReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::PutReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PutReply_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPutReply_bigtable_2eproto}, {}};

static void InitDefaultsGetRequest_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_GetRequest_default_instance_;
    new (ptr) ::bigtable::GetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::GetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRequest_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRequest_bigtable_2eproto}, {}};

static void InitDefaultsGetReply_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_GetReply_default_instance_;
    new (ptr) ::bigtable::GetReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::GetReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetReply_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetReply_bigtable_2eproto}, {}};

static void InitDefaultsCPutRequest_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_CPutRequest_default_instance_;
    new (ptr) ::bigtable::CPutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::CPutRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPutRequest_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPutRequest_bigtable_2eproto}, {}};

static void InitDefaultsCPutReply_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_CPutReply_default_instance_;
    new (ptr) ::bigtable::CPutReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::CPutReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPutReply_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPutReply_bigtable_2eproto}, {}};

static void InitDefaultsDelRequest_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_DelRequest_default_instance_;
    new (ptr) ::bigtable::DelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::DelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DelRequest_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDelRequest_bigtable_2eproto}, {}};

static void InitDefaultsDelReply_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_DelReply_default_instance_;
    new (ptr) ::bigtable::DelReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::DelReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DelReply_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDelReply_bigtable_2eproto}, {}};

static void InitDefaultsfileMetaData_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_fileMetaData_default_instance_;
    new (ptr) ::bigtable::fileMetaData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::fileMetaData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_fileMetaData_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfileMetaData_bigtable_2eproto}, {}};

static void InitDefaultsGetEmailListRequest_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_GetEmailListRequest_default_instance_;
    new (ptr) ::bigtable::GetEmailListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::GetEmailListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetEmailListRequest_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetEmailListRequest_bigtable_2eproto}, {}};

static void InitDefaultsGetEmailListReply_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_GetEmailListReply_default_instance_;
    new (ptr) ::bigtable::GetEmailListReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::GetEmailListReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetEmailListReply_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetEmailListReply_bigtable_2eproto}, {
      &scc_info_fileMetaData_bigtable_2eproto.base,}};

static void InitDefaultsGetFileListRequest_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_GetFileListRequest_default_instance_;
    new (ptr) ::bigtable::GetFileListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::GetFileListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetFileListRequest_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetFileListRequest_bigtable_2eproto}, {}};

static void InitDefaultsGetFileListReply_bigtable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigtable::_GetFileListReply_default_instance_;
    new (ptr) ::bigtable::GetFileListReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigtable::GetFileListReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetFileListReply_bigtable_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetFileListReply_bigtable_2eproto}, {
      &scc_info_fileMetaData_bigtable_2eproto.base,}};

void InitDefaults_bigtable_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PutRequest_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PutReply_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRequest_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetReply_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPutRequest_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPutReply_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DelRequest_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DelReply_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_fileMetaData_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetEmailListRequest_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetEmailListReply_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetFileListRequest_bigtable_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetFileListReply_bigtable_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_bigtable_2eproto[13];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_bigtable_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_bigtable_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_bigtable_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::PutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::PutRequest, created_time_),
  PROTOBUF_FIELD_OFFSET(::bigtable::PutRequest, size_),
  PROTOBUF_FIELD_OFFSET(::bigtable::PutRequest, file_name_),
  PROTOBUF_FIELD_OFFSET(::bigtable::PutRequest, file_type_),
  PROTOBUF_FIELD_OFFSET(::bigtable::PutRequest, file_from_),
  PROTOBUF_FIELD_OFFSET(::bigtable::PutRequest, row_),
  PROTOBUF_FIELD_OFFSET(::bigtable::PutRequest, col_),
  PROTOBUF_FIELD_OFFSET(::bigtable::PutRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::PutReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::PutReply, ret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetRequest, row_),
  PROTOBUF_FIELD_OFFSET(::bigtable::GetRequest, col_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetReply, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutRequest, created_time_),
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutRequest, size_),
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutRequest, file_name_),
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutRequest, file_type_),
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutRequest, file_from_),
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutRequest, row_),
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutRequest, col_),
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutRequest, old_data_),
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutRequest, new_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::CPutReply, ret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::DelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::DelRequest, row_),
  PROTOBUF_FIELD_OFFSET(::bigtable::DelRequest, col_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::DelReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::DelReply, ret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::fileMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::fileMetaData, created_time_),
  PROTOBUF_FIELD_OFFSET(::bigtable::fileMetaData, size_),
  PROTOBUF_FIELD_OFFSET(::bigtable::fileMetaData, file_name_),
  PROTOBUF_FIELD_OFFSET(::bigtable::fileMetaData, file_type_),
  PROTOBUF_FIELD_OFFSET(::bigtable::fileMetaData, file_from_),
  PROTOBUF_FIELD_OFFSET(::bigtable::fileMetaData, file_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetEmailListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetEmailListRequest, row_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetEmailListReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetEmailListReply, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetFileListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetFileListRequest, row_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetFileListReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bigtable::GetFileListReply, metadata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bigtable::PutRequest)},
  { 13, -1, sizeof(::bigtable::PutReply)},
  { 19, -1, sizeof(::bigtable::GetRequest)},
  { 26, -1, sizeof(::bigtable::GetReply)},
  { 32, -1, sizeof(::bigtable::CPutRequest)},
  { 46, -1, sizeof(::bigtable::CPutReply)},
  { 52, -1, sizeof(::bigtable::DelRequest)},
  { 59, -1, sizeof(::bigtable::DelReply)},
  { 65, -1, sizeof(::bigtable::fileMetaData)},
  { 76, -1, sizeof(::bigtable::GetEmailListRequest)},
  { 82, -1, sizeof(::bigtable::GetEmailListReply)},
  { 88, -1, sizeof(::bigtable::GetFileListRequest)},
  { 94, -1, sizeof(::bigtable::GetFileListReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_PutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_PutReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_GetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_GetReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_CPutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_CPutReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_DelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_DelReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_fileMetaData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_GetEmailListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_GetEmailListReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_GetFileListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigtable::_GetFileListReply_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_bigtable_2eproto = {
  {}, AddDescriptors_bigtable_2eproto, "bigtable.proto", schemas,
  file_default_instances, TableStruct_bigtable_2eproto::offsets,
  file_level_metadata_bigtable_2eproto, 13, file_level_enum_descriptors_bigtable_2eproto, file_level_service_descriptors_bigtable_2eproto,
};

const char descriptor_table_protodef_bigtable_2eproto[] =
  "\n\016bigtable.proto\022\010bigtable\"\221\001\n\nPutReques"
  "t\022\024\n\014created_time\030\001 \001(\t\022\014\n\004size\030\002 \001(\005\022\021\n"
  "\tfile_name\030\003 \001(\t\022\021\n\tfile_type\030\004 \001(\t\022\021\n\tf"
  "ile_from\030\005 \001(\t\022\013\n\003row\030\006 \001(\t\022\013\n\003col\030\007 \001(\t"
  "\022\014\n\004data\030\010 \001(\t\"\027\n\010PutReply\022\013\n\003ret\030\001 \001(\010\""
  "&\n\nGetRequest\022\013\n\003row\030\001 \001(\t\022\013\n\003col\030\002 \001(\t\""
  "\033\n\010GetReply\022\017\n\007content\030\001 \001(\t\"\250\001\n\013CPutReq"
  "uest\022\024\n\014created_time\030\001 \001(\t\022\014\n\004size\030\002 \001(\005"
  "\022\021\n\tfile_name\030\003 \001(\t\022\021\n\tfile_type\030\004 \001(\t\022\021"
  "\n\tfile_from\030\005 \001(\t\022\013\n\003row\030\006 \001(\t\022\013\n\003col\030\007 "
  "\001(\t\022\020\n\010old_data\030\010 \001(\t\022\020\n\010new_data\030\t \001(\t\""
  "\030\n\tCPutReply\022\013\n\003ret\030\001 \001(\010\"&\n\nDelRequest\022"
  "\013\n\003row\030\001 \001(\t\022\013\n\003col\030\002 \001(\t\"\027\n\010DelReply\022\013\n"
  "\003ret\030\001 \001(\010\"|\n\014fileMetaData\022\024\n\014created_ti"
  "me\030\001 \001(\t\022\014\n\004size\030\002 \001(\005\022\021\n\tfile_name\030\003 \001("
  "\t\022\021\n\tfile_type\030\004 \001(\t\022\021\n\tfile_from\030\005 \001(\t\022"
  "\017\n\007file_id\030\006 \001(\t\"\"\n\023GetEmailListRequest\022"
  "\013\n\003row\030\001 \001(\t\"=\n\021GetEmailListReply\022(\n\010met"
  "adata\030\001 \003(\0132\026.bigtable.fileMetaData\"!\n\022G"
  "etFileListRequest\022\013\n\003row\030\001 \001(\t\"<\n\020GetFil"
  "eListReply\022(\n\010metadata\030\001 \003(\0132\026.bigtable."
  "fileMetaData2\233\003\n\010Bigtable\0221\n\003put\022\024.bigta"
  "ble.PutRequest\032\022.bigtable.PutReply\"\000\0221\n\003"
  "get\022\024.bigtable.GetRequest\032\022.bigtable.Get"
  "Reply\"\000\0224\n\004cput\022\025.bigtable.CPutRequest\032\023"
  ".bigtable.CPutReply\"\000\022:\n\014table_delete\022\024."
  "bigtable.DelRequest\032\022.bigtable.DelReply\""
  "\000\022\\\n\034list_all_emails_for_currUser\022\035.bigt"
  "able.GetEmailListRequest\032\033.bigtable.GetE"
  "mailListReply\"\000\022Y\n\033list_all_files_for_cu"
  "rrUser\022\034.bigtable.GetFileListRequest\032\032.b"
  "igtable.GetFileListReply\"\000B(\n\020io.grpc.bi"
  "gtableB\rBigtableProtoP\001\242\002\002BTb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_bigtable_2eproto = {
  false, InitDefaults_bigtable_2eproto, 
  descriptor_table_protodef_bigtable_2eproto,
  "bigtable.proto", &assign_descriptors_table_bigtable_2eproto, 1316,
};

void AddDescriptors_bigtable_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_bigtable_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bigtable_2eproto = []() { AddDescriptors_bigtable_2eproto(); return true; }();
namespace bigtable {

// ===================================================================

void PutRequest::InitAsDefaultInstance() {
}
class PutRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutRequest::kCreatedTimeFieldNumber;
const int PutRequest::kSizeFieldNumber;
const int PutRequest::kFileNameFieldNumber;
const int PutRequest::kFileTypeFieldNumber;
const int PutRequest::kFileFromFieldNumber;
const int PutRequest::kRowFieldNumber;
const int PutRequest::kColFieldNumber;
const int PutRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutRequest::PutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.PutRequest)
}
PutRequest::PutRequest(const PutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  created_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.created_time().size() > 0) {
    created_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_time_);
  }
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  file_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_type().size() > 0) {
    file_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_type_);
  }
  file_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_from().size() > 0) {
    file_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_from_);
  }
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row().size() > 0) {
    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col().size() > 0) {
    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:bigtable.PutRequest)
}

void PutRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PutRequest_bigtable_2eproto.base);
  created_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
}

PutRequest::~PutRequest() {
  // @@protoc_insertion_point(destructor:bigtable.PutRequest)
  SharedDtor();
}

void PutRequest::SharedDtor() {
  created_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PutRequest& PutRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PutRequest_bigtable_2eproto.base);
  return *internal_default_instance();
}


void PutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  created_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PutRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PutRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string created_time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.PutRequest.created_time");
        object = msg->mutable_created_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 size = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string file_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.PutRequest.file_name");
        object = msg->mutable_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string file_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.PutRequest.file_type");
        object = msg->mutable_file_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string file_from = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.PutRequest.file_from");
        object = msg->mutable_file_from();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string row = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.PutRequest.row");
        object = msg->mutable_row();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string col = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.PutRequest.col");
        object = msg->mutable_col();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string data = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.PutRequest.data");
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.PutRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string created_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_created_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->created_time().data(), static_cast<int>(this->created_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.PutRequest.created_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.PutRequest.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_type().data(), static_cast<int>(this->file_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.PutRequest.file_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_from = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_from().data(), static_cast<int>(this->file_from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.PutRequest.file_from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string row = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), static_cast<int>(this->row().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.PutRequest.row"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string col = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), static_cast<int>(this->col().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.PutRequest.col"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.PutRequest.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.PutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.PutRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string created_time = 1;
  if (this->created_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->created_time().data(), static_cast<int>(this->created_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.created_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->created_time(), output);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_type().data(), static_cast<int>(this->file_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.file_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->file_type(), output);
  }

  // string file_from = 5;
  if (this->file_from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_from().data(), static_cast<int>(this->file_from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.file_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->file_from(), output);
  }

  // string row = 6;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->row(), output);
  }

  // string col = 7;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), static_cast<int>(this->col().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->col(), output);
  }

  // string data = 8;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.PutRequest)
}

::google::protobuf::uint8* PutRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string created_time = 1;
  if (this->created_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->created_time().data(), static_cast<int>(this->created_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.created_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->created_time(), target);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_type().data(), static_cast<int>(this->file_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.file_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->file_type(), target);
  }

  // string file_from = 5;
  if (this->file_from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_from().data(), static_cast<int>(this->file_from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.file_from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->file_from(), target);
  }

  // string row = 6;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->row(), target);
  }

  // string col = 7;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), static_cast<int>(this->col().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->col(), target);
  }

  // string data = 8;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.PutRequest.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.PutRequest)
  return target;
}

size_t PutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.PutRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string created_time = 1;
  if (this->created_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->created_time());
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_type());
  }

  // string file_from = 5;
  if (this->file_from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_from());
  }

  // string row = 6;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // string col = 7;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  // string data = 8;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.PutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PutRequest* source =
      ::google::protobuf::DynamicCastToGenerated<PutRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.PutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.PutRequest)
    MergeFrom(*source);
  }
}

void PutRequest::MergeFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.PutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.created_time().size() > 0) {

    created_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_time_);
  }
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.file_type().size() > 0) {

    file_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_type_);
  }
  if (from.file_from().size() > 0) {

    file_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_from_);
  }
  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void PutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutRequest::CopyFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutRequest::IsInitialized() const {
  return true;
}

void PutRequest::Swap(PutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutRequest::InternalSwap(PutRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  created_time_.Swap(&other->created_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_type_.Swap(&other->file_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_from_.Swap(&other->file_from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  row_.Swap(&other->row_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_.Swap(&other->col_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
}

::google::protobuf::Metadata PutRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PutReply::InitAsDefaultInstance() {
}
class PutReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutReply::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutReply::PutReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.PutReply)
}
PutReply::PutReply(const PutReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bigtable.PutReply)
}

void PutReply::SharedCtor() {
  ret_ = false;
}

PutReply::~PutReply() {
  // @@protoc_insertion_point(destructor:bigtable.PutReply)
  SharedDtor();
}

void PutReply::SharedDtor() {
}

void PutReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PutReply& PutReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PutReply_bigtable_2eproto.base);
  return *internal_default_instance();
}


void PutReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.PutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PutReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PutReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool ret = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ret(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PutReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.PutReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.PutReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.PutReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PutReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.PutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.PutReply)
}

::google::protobuf::uint8* PutReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.PutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.PutReply)
  return target;
}

size_t PutReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.PutReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ret = 1;
  if (this->ret() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PutReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.PutReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PutReply* source =
      ::google::protobuf::DynamicCastToGenerated<PutReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.PutReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.PutReply)
    MergeFrom(*source);
  }
}

void PutReply::MergeFrom(const PutReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.PutReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void PutReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.PutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutReply::CopyFrom(const PutReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.PutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutReply::IsInitialized() const {
  return true;
}

void PutReply::Swap(PutReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutReply::InternalSwap(PutReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(ret_, other->ret_);
}

::google::protobuf::Metadata PutReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetRequest::InitAsDefaultInstance() {
}
class GetRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kRowFieldNumber;
const int GetRequest::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.GetRequest)
}
GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row().size() > 0) {
    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col().size() > 0) {
    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
  // @@protoc_insertion_point(copy_constructor:bigtable.GetRequest)
}

void GetRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetRequest_bigtable_2eproto.base);
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:bigtable.GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRequest& GetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetRequest_bigtable_2eproto.base);
  return *internal_default_instance();
}


void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string row = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.GetRequest.row");
        object = msg->mutable_row();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string col = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.GetRequest.col");
        object = msg->mutable_col();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.GetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), static_cast<int>(this->row().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.GetRequest.row"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), static_cast<int>(this->col().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.GetRequest.col"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.GetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.GetRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  // string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), static_cast<int>(this->col().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.GetRequest.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.GetRequest)
}

::google::protobuf::uint8* GetRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.GetRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  // string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), static_cast<int>(this->col().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.GetRequest.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.GetRequest)
  return target;
}

size_t GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.GetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // string col = 2;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.GetRequest)
    MergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRequest::IsInitialized() const {
  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  row_.Swap(&other->row_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_.Swap(&other->col_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetReply::InitAsDefaultInstance() {
}
class GetReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetReply::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetReply::GetReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.GetReply)
}
GetReply::GetReply(const GetReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:bigtable.GetReply)
}

void GetReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetReply_bigtable_2eproto.base);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetReply::~GetReply() {
  // @@protoc_insertion_point(destructor:bigtable.GetReply)
  SharedDtor();
}

void GetReply::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetReply& GetReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetReply_bigtable_2eproto.base);
  return *internal_default_instance();
}


void GetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.GetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string content = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.GetReply.content");
        object = msg->mutable_content();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.GetReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.GetReply.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.GetReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.GetReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.GetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.GetReply.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.GetReply)
}

::google::protobuf::uint8* GetReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.GetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.GetReply.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.GetReply)
  return target;
}

size_t GetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.GetReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.GetReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetReply* source =
      ::google::protobuf::DynamicCastToGenerated<GetReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.GetReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.GetReply)
    MergeFrom(*source);
  }
}

void GetReply::MergeFrom(const GetReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.GetReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void GetReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.GetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetReply::CopyFrom(const GetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.GetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReply::IsInitialized() const {
  return true;
}

void GetReply::Swap(GetReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetReply::InternalSwap(GetReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CPutRequest::InitAsDefaultInstance() {
}
class CPutRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPutRequest::kCreatedTimeFieldNumber;
const int CPutRequest::kSizeFieldNumber;
const int CPutRequest::kFileNameFieldNumber;
const int CPutRequest::kFileTypeFieldNumber;
const int CPutRequest::kFileFromFieldNumber;
const int CPutRequest::kRowFieldNumber;
const int CPutRequest::kColFieldNumber;
const int CPutRequest::kOldDataFieldNumber;
const int CPutRequest::kNewDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPutRequest::CPutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.CPutRequest)
}
CPutRequest::CPutRequest(const CPutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  created_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.created_time().size() > 0) {
    created_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_time_);
  }
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  file_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_type().size() > 0) {
    file_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_type_);
  }
  file_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_from().size() > 0) {
    file_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_from_);
  }
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row().size() > 0) {
    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col().size() > 0) {
    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
  old_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.old_data().size() > 0) {
    old_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_data_);
  }
  new_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_data().size() > 0) {
    new_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_data_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:bigtable.CPutRequest)
}

void CPutRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CPutRequest_bigtable_2eproto.base);
  created_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
}

CPutRequest::~CPutRequest() {
  // @@protoc_insertion_point(destructor:bigtable.CPutRequest)
  SharedDtor();
}

void CPutRequest::SharedDtor() {
  created_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CPutRequest& CPutRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CPutRequest_bigtable_2eproto.base);
  return *internal_default_instance();
}


void CPutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.CPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  created_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CPutRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CPutRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string created_time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.CPutRequest.created_time");
        object = msg->mutable_created_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 size = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string file_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.CPutRequest.file_name");
        object = msg->mutable_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string file_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.CPutRequest.file_type");
        object = msg->mutable_file_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string file_from = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.CPutRequest.file_from");
        object = msg->mutable_file_from();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string row = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.CPutRequest.row");
        object = msg->mutable_row();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string col = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.CPutRequest.col");
        object = msg->mutable_col();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string old_data = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.CPutRequest.old_data");
        object = msg->mutable_old_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string new_data = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.CPutRequest.new_data");
        object = msg->mutable_new_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CPutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.CPutRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string created_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_created_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->created_time().data(), static_cast<int>(this->created_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.CPutRequest.created_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.CPutRequest.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_type().data(), static_cast<int>(this->file_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.CPutRequest.file_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_from = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_from().data(), static_cast<int>(this->file_from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.CPutRequest.file_from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string row = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), static_cast<int>(this->row().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.CPutRequest.row"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string col = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), static_cast<int>(this->col().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.CPutRequest.col"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string old_data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->old_data().data(), static_cast<int>(this->old_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.CPutRequest.old_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string new_data = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_data().data(), static_cast<int>(this->new_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.CPutRequest.new_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.CPutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.CPutRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CPutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.CPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string created_time = 1;
  if (this->created_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->created_time().data(), static_cast<int>(this->created_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.created_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->created_time(), output);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_type().data(), static_cast<int>(this->file_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.file_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->file_type(), output);
  }

  // string file_from = 5;
  if (this->file_from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_from().data(), static_cast<int>(this->file_from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.file_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->file_from(), output);
  }

  // string row = 6;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->row(), output);
  }

  // string col = 7;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), static_cast<int>(this->col().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->col(), output);
  }

  // string old_data = 8;
  if (this->old_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->old_data().data(), static_cast<int>(this->old_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.old_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->old_data(), output);
  }

  // string new_data = 9;
  if (this->new_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_data().data(), static_cast<int>(this->new_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.new_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->new_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.CPutRequest)
}

::google::protobuf::uint8* CPutRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.CPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string created_time = 1;
  if (this->created_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->created_time().data(), static_cast<int>(this->created_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.created_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->created_time(), target);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_type().data(), static_cast<int>(this->file_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.file_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->file_type(), target);
  }

  // string file_from = 5;
  if (this->file_from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_from().data(), static_cast<int>(this->file_from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.file_from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->file_from(), target);
  }

  // string row = 6;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->row(), target);
  }

  // string col = 7;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), static_cast<int>(this->col().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->col(), target);
  }

  // string old_data = 8;
  if (this->old_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->old_data().data(), static_cast<int>(this->old_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.old_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->old_data(), target);
  }

  // string new_data = 9;
  if (this->new_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_data().data(), static_cast<int>(this->new_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.CPutRequest.new_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->new_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.CPutRequest)
  return target;
}

size_t CPutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.CPutRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string created_time = 1;
  if (this->created_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->created_time());
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_type());
  }

  // string file_from = 5;
  if (this->file_from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_from());
  }

  // string row = 6;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // string col = 7;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  // string old_data = 8;
  if (this->old_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->old_data());
  }

  // string new_data = 9;
  if (this->new_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_data());
  }

  // int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.CPutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CPutRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CPutRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.CPutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.CPutRequest)
    MergeFrom(*source);
  }
}

void CPutRequest::MergeFrom(const CPutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.CPutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.created_time().size() > 0) {

    created_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_time_);
  }
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.file_type().size() > 0) {

    file_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_type_);
  }
  if (from.file_from().size() > 0) {

    file_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_from_);
  }
  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
  if (from.old_data().size() > 0) {

    old_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_data_);
  }
  if (from.new_data().size() > 0) {

    new_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_data_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void CPutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.CPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPutRequest::CopyFrom(const CPutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.CPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPutRequest::IsInitialized() const {
  return true;
}

void CPutRequest::Swap(CPutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPutRequest::InternalSwap(CPutRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  created_time_.Swap(&other->created_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_type_.Swap(&other->file_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_from_.Swap(&other->file_from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  row_.Swap(&other->row_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_.Swap(&other->col_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  old_data_.Swap(&other->old_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  new_data_.Swap(&other->new_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
}

::google::protobuf::Metadata CPutRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CPutReply::InitAsDefaultInstance() {
}
class CPutReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPutReply::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPutReply::CPutReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.CPutReply)
}
CPutReply::CPutReply(const CPutReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bigtable.CPutReply)
}

void CPutReply::SharedCtor() {
  ret_ = false;
}

CPutReply::~CPutReply() {
  // @@protoc_insertion_point(destructor:bigtable.CPutReply)
  SharedDtor();
}

void CPutReply::SharedDtor() {
}

void CPutReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CPutReply& CPutReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CPutReply_bigtable_2eproto.base);
  return *internal_default_instance();
}


void CPutReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.CPutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CPutReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CPutReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool ret = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ret(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CPutReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.CPutReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.CPutReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.CPutReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CPutReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.CPutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.CPutReply)
}

::google::protobuf::uint8* CPutReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.CPutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.CPutReply)
  return target;
}

size_t CPutReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.CPutReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ret = 1;
  if (this->ret() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPutReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.CPutReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CPutReply* source =
      ::google::protobuf::DynamicCastToGenerated<CPutReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.CPutReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.CPutReply)
    MergeFrom(*source);
  }
}

void CPutReply::MergeFrom(const CPutReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.CPutReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void CPutReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.CPutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPutReply::CopyFrom(const CPutReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.CPutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPutReply::IsInitialized() const {
  return true;
}

void CPutReply::Swap(CPutReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPutReply::InternalSwap(CPutReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(ret_, other->ret_);
}

::google::protobuf::Metadata CPutReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DelRequest::InitAsDefaultInstance() {
}
class DelRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelRequest::kRowFieldNumber;
const int DelRequest::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelRequest::DelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.DelRequest)
}
DelRequest::DelRequest(const DelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row().size() > 0) {
    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col().size() > 0) {
    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
  // @@protoc_insertion_point(copy_constructor:bigtable.DelRequest)
}

void DelRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DelRequest_bigtable_2eproto.base);
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DelRequest::~DelRequest() {
  // @@protoc_insertion_point(destructor:bigtable.DelRequest)
  SharedDtor();
}

void DelRequest::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DelRequest& DelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DelRequest_bigtable_2eproto.base);
  return *internal_default_instance();
}


void DelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.DelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DelRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DelRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string row = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.DelRequest.row");
        object = msg->mutable_row();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string col = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.DelRequest.col");
        object = msg->mutable_col();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.DelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), static_cast<int>(this->row().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.DelRequest.row"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), static_cast<int>(this->col().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.DelRequest.col"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.DelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.DelRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.DelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.DelRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  // string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), static_cast<int>(this->col().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.DelRequest.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.DelRequest)
}

::google::protobuf::uint8* DelRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.DelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.DelRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  // string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), static_cast<int>(this->col().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.DelRequest.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.DelRequest)
  return target;
}

size_t DelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.DelRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // string col = 2;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.DelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DelRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.DelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.DelRequest)
    MergeFrom(*source);
  }
}

void DelRequest::MergeFrom(const DelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.DelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
}

void DelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.DelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelRequest::CopyFrom(const DelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.DelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelRequest::IsInitialized() const {
  return true;
}

void DelRequest::Swap(DelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelRequest::InternalSwap(DelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  row_.Swap(&other->row_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_.Swap(&other->col_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DelRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DelReply::InitAsDefaultInstance() {
}
class DelReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelReply::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelReply::DelReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.DelReply)
}
DelReply::DelReply(const DelReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bigtable.DelReply)
}

void DelReply::SharedCtor() {
  ret_ = false;
}

DelReply::~DelReply() {
  // @@protoc_insertion_point(destructor:bigtable.DelReply)
  SharedDtor();
}

void DelReply::SharedDtor() {
}

void DelReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DelReply& DelReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DelReply_bigtable_2eproto.base);
  return *internal_default_instance();
}


void DelReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.DelReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DelReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DelReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool ret = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ret(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DelReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.DelReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.DelReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.DelReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DelReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.DelReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.DelReply)
}

::google::protobuf::uint8* DelReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.DelReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.DelReply)
  return target;
}

size_t DelReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.DelReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ret = 1;
  if (this->ret() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.DelReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DelReply* source =
      ::google::protobuf::DynamicCastToGenerated<DelReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.DelReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.DelReply)
    MergeFrom(*source);
  }
}

void DelReply::MergeFrom(const DelReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.DelReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void DelReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.DelReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelReply::CopyFrom(const DelReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.DelReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelReply::IsInitialized() const {
  return true;
}

void DelReply::Swap(DelReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelReply::InternalSwap(DelReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(ret_, other->ret_);
}

::google::protobuf::Metadata DelReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void fileMetaData::InitAsDefaultInstance() {
}
class fileMetaData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int fileMetaData::kCreatedTimeFieldNumber;
const int fileMetaData::kSizeFieldNumber;
const int fileMetaData::kFileNameFieldNumber;
const int fileMetaData::kFileTypeFieldNumber;
const int fileMetaData::kFileFromFieldNumber;
const int fileMetaData::kFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

fileMetaData::fileMetaData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.fileMetaData)
}
fileMetaData::fileMetaData(const fileMetaData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  created_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.created_time().size() > 0) {
    created_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_time_);
  }
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  file_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_type().size() > 0) {
    file_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_type_);
  }
  file_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_from().size() > 0) {
    file_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_from_);
  }
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_id().size() > 0) {
    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:bigtable.fileMetaData)
}

void fileMetaData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_fileMetaData_bigtable_2eproto.base);
  created_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
}

fileMetaData::~fileMetaData() {
  // @@protoc_insertion_point(destructor:bigtable.fileMetaData)
  SharedDtor();
}

void fileMetaData::SharedDtor() {
  created_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void fileMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const fileMetaData& fileMetaData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_fileMetaData_bigtable_2eproto.base);
  return *internal_default_instance();
}


void fileMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.fileMetaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  created_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* fileMetaData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<fileMetaData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string created_time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.fileMetaData.created_time");
        object = msg->mutable_created_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 size = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string file_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.fileMetaData.file_name");
        object = msg->mutable_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string file_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.fileMetaData.file_type");
        object = msg->mutable_file_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string file_from = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.fileMetaData.file_from");
        object = msg->mutable_file_from();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string file_id = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.fileMetaData.file_id");
        object = msg->mutable_file_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool fileMetaData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.fileMetaData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string created_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_created_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->created_time().data(), static_cast<int>(this->created_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.fileMetaData.created_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.fileMetaData.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_type().data(), static_cast<int>(this->file_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.fileMetaData.file_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_from = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_from().data(), static_cast<int>(this->file_from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.fileMetaData.file_from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_id().data(), static_cast<int>(this->file_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.fileMetaData.file_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.fileMetaData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.fileMetaData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void fileMetaData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.fileMetaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string created_time = 1;
  if (this->created_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->created_time().data(), static_cast<int>(this->created_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.fileMetaData.created_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->created_time(), output);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.fileMetaData.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_type().data(), static_cast<int>(this->file_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.fileMetaData.file_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->file_type(), output);
  }

  // string file_from = 5;
  if (this->file_from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_from().data(), static_cast<int>(this->file_from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.fileMetaData.file_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->file_from(), output);
  }

  // string file_id = 6;
  if (this->file_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_id().data(), static_cast<int>(this->file_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.fileMetaData.file_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.fileMetaData)
}

::google::protobuf::uint8* fileMetaData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.fileMetaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string created_time = 1;
  if (this->created_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->created_time().data(), static_cast<int>(this->created_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.fileMetaData.created_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->created_time(), target);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.fileMetaData.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_type().data(), static_cast<int>(this->file_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.fileMetaData.file_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->file_type(), target);
  }

  // string file_from = 5;
  if (this->file_from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_from().data(), static_cast<int>(this->file_from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.fileMetaData.file_from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->file_from(), target);
  }

  // string file_id = 6;
  if (this->file_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_id().data(), static_cast<int>(this->file_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.fileMetaData.file_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.fileMetaData)
  return target;
}

size_t fileMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.fileMetaData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string created_time = 1;
  if (this->created_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->created_time());
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string file_type = 4;
  if (this->file_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_type());
  }

  // string file_from = 5;
  if (this->file_from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_from());
  }

  // string file_id = 6;
  if (this->file_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_id());
  }

  // int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void fileMetaData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.fileMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const fileMetaData* source =
      ::google::protobuf::DynamicCastToGenerated<fileMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.fileMetaData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.fileMetaData)
    MergeFrom(*source);
  }
}

void fileMetaData::MergeFrom(const fileMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.fileMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.created_time().size() > 0) {

    created_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_time_);
  }
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.file_type().size() > 0) {

    file_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_type_);
  }
  if (from.file_from().size() > 0) {

    file_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_from_);
  }
  if (from.file_id().size() > 0) {

    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void fileMetaData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.fileMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void fileMetaData::CopyFrom(const fileMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.fileMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool fileMetaData::IsInitialized() const {
  return true;
}

void fileMetaData::Swap(fileMetaData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void fileMetaData::InternalSwap(fileMetaData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  created_time_.Swap(&other->created_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_type_.Swap(&other->file_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_from_.Swap(&other->file_from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_id_.Swap(&other->file_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
}

::google::protobuf::Metadata fileMetaData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetEmailListRequest::InitAsDefaultInstance() {
}
class GetEmailListRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetEmailListRequest::kRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetEmailListRequest::GetEmailListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.GetEmailListRequest)
}
GetEmailListRequest::GetEmailListRequest(const GetEmailListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row().size() > 0) {
    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  // @@protoc_insertion_point(copy_constructor:bigtable.GetEmailListRequest)
}

void GetEmailListRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetEmailListRequest_bigtable_2eproto.base);
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetEmailListRequest::~GetEmailListRequest() {
  // @@protoc_insertion_point(destructor:bigtable.GetEmailListRequest)
  SharedDtor();
}

void GetEmailListRequest::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetEmailListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEmailListRequest& GetEmailListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetEmailListRequest_bigtable_2eproto.base);
  return *internal_default_instance();
}


void GetEmailListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.GetEmailListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetEmailListRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetEmailListRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string row = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.GetEmailListRequest.row");
        object = msg->mutable_row();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetEmailListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.GetEmailListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), static_cast<int>(this->row().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.GetEmailListRequest.row"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.GetEmailListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.GetEmailListRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetEmailListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.GetEmailListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.GetEmailListRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.GetEmailListRequest)
}

::google::protobuf::uint8* GetEmailListRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.GetEmailListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.GetEmailListRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.GetEmailListRequest)
  return target;
}

size_t GetEmailListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.GetEmailListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEmailListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.GetEmailListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEmailListRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetEmailListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.GetEmailListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.GetEmailListRequest)
    MergeFrom(*source);
  }
}

void GetEmailListRequest::MergeFrom(const GetEmailListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.GetEmailListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
}

void GetEmailListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.GetEmailListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEmailListRequest::CopyFrom(const GetEmailListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.GetEmailListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEmailListRequest::IsInitialized() const {
  return true;
}

void GetEmailListRequest::Swap(GetEmailListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetEmailListRequest::InternalSwap(GetEmailListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  row_.Swap(&other->row_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetEmailListRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetEmailListReply::InitAsDefaultInstance() {
}
class GetEmailListReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetEmailListReply::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetEmailListReply::GetEmailListReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.GetEmailListReply)
}
GetEmailListReply::GetEmailListReply(const GetEmailListReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      metadata_(from.metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bigtable.GetEmailListReply)
}

void GetEmailListReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetEmailListReply_bigtable_2eproto.base);
}

GetEmailListReply::~GetEmailListReply() {
  // @@protoc_insertion_point(destructor:bigtable.GetEmailListReply)
  SharedDtor();
}

void GetEmailListReply::SharedDtor() {
}

void GetEmailListReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEmailListReply& GetEmailListReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetEmailListReply_bigtable_2eproto.base);
  return *internal_default_instance();
}


void GetEmailListReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.GetEmailListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetEmailListReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetEmailListReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .bigtable.fileMetaData metadata = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::bigtable::fileMetaData::_InternalParse;
          object = msg->add_metadata();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetEmailListReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.GetEmailListReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bigtable.fileMetaData metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.GetEmailListReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.GetEmailListReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetEmailListReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.GetEmailListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bigtable.fileMetaData metadata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->metadata(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.GetEmailListReply)
}

::google::protobuf::uint8* GetEmailListReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.GetEmailListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bigtable.fileMetaData metadata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->metadata(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.GetEmailListReply)
  return target;
}

size_t GetEmailListReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.GetEmailListReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bigtable.fileMetaData metadata = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metadata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEmailListReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.GetEmailListReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEmailListReply* source =
      ::google::protobuf::DynamicCastToGenerated<GetEmailListReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.GetEmailListReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.GetEmailListReply)
    MergeFrom(*source);
  }
}

void GetEmailListReply::MergeFrom(const GetEmailListReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.GetEmailListReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
}

void GetEmailListReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.GetEmailListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEmailListReply::CopyFrom(const GetEmailListReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.GetEmailListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEmailListReply::IsInitialized() const {
  return true;
}

void GetEmailListReply::Swap(GetEmailListReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetEmailListReply::InternalSwap(GetEmailListReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&metadata_)->InternalSwap(CastToBase(&other->metadata_));
}

::google::protobuf::Metadata GetEmailListReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetFileListRequest::InitAsDefaultInstance() {
}
class GetFileListRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFileListRequest::kRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFileListRequest::GetFileListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.GetFileListRequest)
}
GetFileListRequest::GetFileListRequest(const GetFileListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row().size() > 0) {
    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  // @@protoc_insertion_point(copy_constructor:bigtable.GetFileListRequest)
}

void GetFileListRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetFileListRequest_bigtable_2eproto.base);
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetFileListRequest::~GetFileListRequest() {
  // @@protoc_insertion_point(destructor:bigtable.GetFileListRequest)
  SharedDtor();
}

void GetFileListRequest::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFileListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetFileListRequest& GetFileListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetFileListRequest_bigtable_2eproto.base);
  return *internal_default_instance();
}


void GetFileListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.GetFileListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetFileListRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetFileListRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string row = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("bigtable.GetFileListRequest.row");
        object = msg->mutable_row();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetFileListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.GetFileListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), static_cast<int>(this->row().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.GetFileListRequest.row"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.GetFileListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.GetFileListRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetFileListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.GetFileListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.GetFileListRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.GetFileListRequest)
}

::google::protobuf::uint8* GetFileListRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.GetFileListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), static_cast<int>(this->row().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.GetFileListRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.GetFileListRequest)
  return target;
}

size_t GetFileListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.GetFileListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetFileListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.GetFileListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFileListRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetFileListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.GetFileListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.GetFileListRequest)
    MergeFrom(*source);
  }
}

void GetFileListRequest::MergeFrom(const GetFileListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.GetFileListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
}

void GetFileListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.GetFileListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFileListRequest::CopyFrom(const GetFileListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.GetFileListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFileListRequest::IsInitialized() const {
  return true;
}

void GetFileListRequest::Swap(GetFileListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFileListRequest::InternalSwap(GetFileListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  row_.Swap(&other->row_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetFileListRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetFileListReply::InitAsDefaultInstance() {
}
class GetFileListReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFileListReply::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFileListReply::GetFileListReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.GetFileListReply)
}
GetFileListReply::GetFileListReply(const GetFileListReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      metadata_(from.metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bigtable.GetFileListReply)
}

void GetFileListReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetFileListReply_bigtable_2eproto.base);
}

GetFileListReply::~GetFileListReply() {
  // @@protoc_insertion_point(destructor:bigtable.GetFileListReply)
  SharedDtor();
}

void GetFileListReply::SharedDtor() {
}

void GetFileListReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetFileListReply& GetFileListReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetFileListReply_bigtable_2eproto.base);
  return *internal_default_instance();
}


void GetFileListReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.GetFileListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetFileListReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetFileListReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .bigtable.fileMetaData metadata = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::bigtable::fileMetaData::_InternalParse;
          object = msg->add_metadata();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetFileListReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.GetFileListReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bigtable.fileMetaData metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.GetFileListReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.GetFileListReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetFileListReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.GetFileListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bigtable.fileMetaData metadata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->metadata(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bigtable.GetFileListReply)
}

::google::protobuf::uint8* GetFileListReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.GetFileListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bigtable.fileMetaData metadata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->metadata(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.GetFileListReply)
  return target;
}

size_t GetFileListReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.GetFileListReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bigtable.fileMetaData metadata = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metadata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetFileListReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.GetFileListReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFileListReply* source =
      ::google::protobuf::DynamicCastToGenerated<GetFileListReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.GetFileListReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.GetFileListReply)
    MergeFrom(*source);
  }
}

void GetFileListReply::MergeFrom(const GetFileListReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.GetFileListReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
}

void GetFileListReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.GetFileListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFileListReply::CopyFrom(const GetFileListReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.GetFileListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFileListReply::IsInitialized() const {
  return true;
}

void GetFileListReply::Swap(GetFileListReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFileListReply::InternalSwap(GetFileListReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&metadata_)->InternalSwap(CastToBase(&other->metadata_));
}

::google::protobuf::Metadata GetFileListReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_bigtable_2eproto);
  return ::file_level_metadata_bigtable_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bigtable
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::bigtable::PutRequest* Arena::CreateMaybeMessage< ::bigtable::PutRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::PutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::PutReply* Arena::CreateMaybeMessage< ::bigtable::PutReply >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::PutReply >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::GetRequest* Arena::CreateMaybeMessage< ::bigtable::GetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::GetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::GetReply* Arena::CreateMaybeMessage< ::bigtable::GetReply >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::GetReply >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::CPutRequest* Arena::CreateMaybeMessage< ::bigtable::CPutRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::CPutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::CPutReply* Arena::CreateMaybeMessage< ::bigtable::CPutReply >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::CPutReply >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::DelRequest* Arena::CreateMaybeMessage< ::bigtable::DelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::DelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::DelReply* Arena::CreateMaybeMessage< ::bigtable::DelReply >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::DelReply >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::fileMetaData* Arena::CreateMaybeMessage< ::bigtable::fileMetaData >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::fileMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::GetEmailListRequest* Arena::CreateMaybeMessage< ::bigtable::GetEmailListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::GetEmailListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::GetEmailListReply* Arena::CreateMaybeMessage< ::bigtable::GetEmailListReply >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::GetEmailListReply >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::GetFileListRequest* Arena::CreateMaybeMessage< ::bigtable::GetFileListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::GetFileListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bigtable::GetFileListReply* Arena::CreateMaybeMessage< ::bigtable::GetFileListReply >(Arena* arena) {
  return Arena::CreateInternal< ::bigtable::GetFileListReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
