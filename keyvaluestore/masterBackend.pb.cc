// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: masterBackend.proto

#include "masterBackend.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace masterBackend {
class GetPrimRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPrimRequest> _instance;
} _GetPrimRequest_default_instance_;
class GetPrimReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPrimReply> _instance;
} _GetPrimReply_default_instance_;
class ListSubRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSubRequest> _instance;
} _ListSubRequest_default_instance_;
class ListSubReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSubReply> _instance;
} _ListSubReply_default_instance_;
class PromotePrimRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PromotePrimRequest> _instance;
} _PromotePrimRequest_default_instance_;
class PromotePrimReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PromotePrimReply> _instance;
} _PromotePrimReply_default_instance_;
}  // namespace masterBackend
static void InitDefaultsGetPrimRequest_masterBackend_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::masterBackend::_GetPrimRequest_default_instance_;
    new (ptr) ::masterBackend::GetPrimRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::masterBackend::GetPrimRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPrimRequest_masterBackend_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPrimRequest_masterBackend_2eproto}, {}};

static void InitDefaultsGetPrimReply_masterBackend_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::masterBackend::_GetPrimReply_default_instance_;
    new (ptr) ::masterBackend::GetPrimReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::masterBackend::GetPrimReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPrimReply_masterBackend_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPrimReply_masterBackend_2eproto}, {}};

static void InitDefaultsListSubRequest_masterBackend_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::masterBackend::_ListSubRequest_default_instance_;
    new (ptr) ::masterBackend::ListSubRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::masterBackend::ListSubRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSubRequest_masterBackend_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSubRequest_masterBackend_2eproto}, {}};

static void InitDefaultsListSubReply_masterBackend_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::masterBackend::_ListSubReply_default_instance_;
    new (ptr) ::masterBackend::ListSubReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::masterBackend::ListSubReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSubReply_masterBackend_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSubReply_masterBackend_2eproto}, {}};

static void InitDefaultsPromotePrimRequest_masterBackend_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::masterBackend::_PromotePrimRequest_default_instance_;
    new (ptr) ::masterBackend::PromotePrimRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::masterBackend::PromotePrimRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PromotePrimRequest_masterBackend_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPromotePrimRequest_masterBackend_2eproto}, {}};

static void InitDefaultsPromotePrimReply_masterBackend_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::masterBackend::_PromotePrimReply_default_instance_;
    new (ptr) ::masterBackend::PromotePrimReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::masterBackend::PromotePrimReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PromotePrimReply_masterBackend_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPromotePrimReply_masterBackend_2eproto}, {}};

void InitDefaults_masterBackend_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetPrimRequest_masterBackend_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPrimReply_masterBackend_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSubRequest_masterBackend_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSubReply_masterBackend_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PromotePrimRequest_masterBackend_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PromotePrimReply_masterBackend_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_masterBackend_2eproto[6];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_masterBackend_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_masterBackend_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_masterBackend_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::masterBackend::GetPrimRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::masterBackend::GetPrimRequest, my_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::masterBackend::GetPrimReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::masterBackend::GetPrimReply, prim_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::masterBackend::ListSubRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::masterBackend::ListSubRequest, my_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::masterBackend::ListSubReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::masterBackend::ListSubReply, sub_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::masterBackend::PromotePrimRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::masterBackend::PromotePrimRequest, my_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::masterBackend::PromotePrimReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::masterBackend::PromotePrimReply, prim_index_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::masterBackend::GetPrimRequest)},
  { 6, -1, sizeof(::masterBackend::GetPrimReply)},
  { 12, -1, sizeof(::masterBackend::ListSubRequest)},
  { 18, -1, sizeof(::masterBackend::ListSubReply)},
  { 24, -1, sizeof(::masterBackend::PromotePrimRequest)},
  { 30, -1, sizeof(::masterBackend::PromotePrimReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::masterBackend::_GetPrimRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::masterBackend::_GetPrimReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::masterBackend::_ListSubRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::masterBackend::_ListSubReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::masterBackend::_PromotePrimRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::masterBackend::_PromotePrimReply_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_masterBackend_2eproto = {
  {}, AddDescriptors_masterBackend_2eproto, "masterBackend.proto", schemas,
  file_default_instances, TableStruct_masterBackend_2eproto::offsets,
  file_level_metadata_masterBackend_2eproto, 6, file_level_enum_descriptors_masterBackend_2eproto, file_level_service_descriptors_masterBackend_2eproto,
};

const char descriptor_table_protodef_masterBackend_2eproto[] =
  "\n\023masterBackend.proto\022\rmasterBackend\"\"\n\016"
  "GetPrimRequest\022\020\n\010my_index\030\001 \001(\005\"\"\n\014GetP"
  "rimReply\022\022\n\nprim_index\030\001 \001(\005\"\"\n\016ListSubR"
  "equest\022\020\n\010my_index\030\001 \001(\005\"!\n\014ListSubReply"
  "\022\021\n\tsub_index\030\001 \003(\005\"&\n\022PromotePrimReques"
  "t\022\020\n\010my_index\030\001 \001(\005\"&\n\020PromotePrimReply\022"
  "\022\n\nprim_index\030\001 \001(\t2\243\001\n\rMasterBackend\022H\n"
  "\010get_prim\022\035.masterBackend.GetPrimRequest"
  "\032\033.masterBackend.GetPrimReply\"\000\022H\n\010list_"
  "sub\022\035.masterBackend.ListSubRequest\032\033.mas"
  "terBackend.ListSubReply\"\000B2\n\025io.grpc.mas"
  "terBackendB\022masterBackendProtoP\001\242\002\002MBb\006p"
  "roto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_masterBackend_2eproto = {
  false, InitDefaults_masterBackend_2eproto, 
  descriptor_table_protodef_masterBackend_2eproto,
  "masterBackend.proto", &assign_descriptors_table_masterBackend_2eproto, 485,
};

void AddDescriptors_masterBackend_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_masterBackend_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_masterBackend_2eproto = []() { AddDescriptors_masterBackend_2eproto(); return true; }();
namespace masterBackend {

// ===================================================================

void GetPrimRequest::InitAsDefaultInstance() {
}
class GetPrimRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPrimRequest::kMyIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPrimRequest::GetPrimRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:masterBackend.GetPrimRequest)
}
GetPrimRequest::GetPrimRequest(const GetPrimRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  my_index_ = from.my_index_;
  // @@protoc_insertion_point(copy_constructor:masterBackend.GetPrimRequest)
}

void GetPrimRequest::SharedCtor() {
  my_index_ = 0;
}

GetPrimRequest::~GetPrimRequest() {
  // @@protoc_insertion_point(destructor:masterBackend.GetPrimRequest)
  SharedDtor();
}

void GetPrimRequest::SharedDtor() {
}

void GetPrimRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPrimRequest& GetPrimRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetPrimRequest_masterBackend_2eproto.base);
  return *internal_default_instance();
}


void GetPrimRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:masterBackend.GetPrimRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  my_index_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetPrimRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetPrimRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 my_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_my_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetPrimRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:masterBackend.GetPrimRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 my_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:masterBackend.GetPrimRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:masterBackend.GetPrimRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetPrimRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:masterBackend.GetPrimRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 my_index = 1;
  if (this->my_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->my_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:masterBackend.GetPrimRequest)
}

::google::protobuf::uint8* GetPrimRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:masterBackend.GetPrimRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 my_index = 1;
  if (this->my_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->my_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:masterBackend.GetPrimRequest)
  return target;
}

size_t GetPrimRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:masterBackend.GetPrimRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 my_index = 1;
  if (this->my_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->my_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPrimRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:masterBackend.GetPrimRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPrimRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetPrimRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:masterBackend.GetPrimRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:masterBackend.GetPrimRequest)
    MergeFrom(*source);
  }
}

void GetPrimRequest::MergeFrom(const GetPrimRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:masterBackend.GetPrimRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.my_index() != 0) {
    set_my_index(from.my_index());
  }
}

void GetPrimRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:masterBackend.GetPrimRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPrimRequest::CopyFrom(const GetPrimRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterBackend.GetPrimRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPrimRequest::IsInitialized() const {
  return true;
}

void GetPrimRequest::Swap(GetPrimRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPrimRequest::InternalSwap(GetPrimRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(my_index_, other->my_index_);
}

::google::protobuf::Metadata GetPrimRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_masterBackend_2eproto);
  return ::file_level_metadata_masterBackend_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetPrimReply::InitAsDefaultInstance() {
}
class GetPrimReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPrimReply::kPrimIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPrimReply::GetPrimReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:masterBackend.GetPrimReply)
}
GetPrimReply::GetPrimReply(const GetPrimReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prim_index_ = from.prim_index_;
  // @@protoc_insertion_point(copy_constructor:masterBackend.GetPrimReply)
}

void GetPrimReply::SharedCtor() {
  prim_index_ = 0;
}

GetPrimReply::~GetPrimReply() {
  // @@protoc_insertion_point(destructor:masterBackend.GetPrimReply)
  SharedDtor();
}

void GetPrimReply::SharedDtor() {
}

void GetPrimReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPrimReply& GetPrimReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetPrimReply_masterBackend_2eproto.base);
  return *internal_default_instance();
}


void GetPrimReply::Clear() {
// @@protoc_insertion_point(message_clear_start:masterBackend.GetPrimReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prim_index_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetPrimReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetPrimReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 prim_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_prim_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetPrimReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:masterBackend.GetPrimReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 prim_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prim_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:masterBackend.GetPrimReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:masterBackend.GetPrimReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetPrimReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:masterBackend.GetPrimReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 prim_index = 1;
  if (this->prim_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->prim_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:masterBackend.GetPrimReply)
}

::google::protobuf::uint8* GetPrimReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:masterBackend.GetPrimReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 prim_index = 1;
  if (this->prim_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->prim_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:masterBackend.GetPrimReply)
  return target;
}

size_t GetPrimReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:masterBackend.GetPrimReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 prim_index = 1;
  if (this->prim_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->prim_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPrimReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:masterBackend.GetPrimReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPrimReply* source =
      ::google::protobuf::DynamicCastToGenerated<GetPrimReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:masterBackend.GetPrimReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:masterBackend.GetPrimReply)
    MergeFrom(*source);
  }
}

void GetPrimReply::MergeFrom(const GetPrimReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:masterBackend.GetPrimReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.prim_index() != 0) {
    set_prim_index(from.prim_index());
  }
}

void GetPrimReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:masterBackend.GetPrimReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPrimReply::CopyFrom(const GetPrimReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterBackend.GetPrimReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPrimReply::IsInitialized() const {
  return true;
}

void GetPrimReply::Swap(GetPrimReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPrimReply::InternalSwap(GetPrimReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(prim_index_, other->prim_index_);
}

::google::protobuf::Metadata GetPrimReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_masterBackend_2eproto);
  return ::file_level_metadata_masterBackend_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListSubRequest::InitAsDefaultInstance() {
}
class ListSubRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSubRequest::kMyIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSubRequest::ListSubRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:masterBackend.ListSubRequest)
}
ListSubRequest::ListSubRequest(const ListSubRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  my_index_ = from.my_index_;
  // @@protoc_insertion_point(copy_constructor:masterBackend.ListSubRequest)
}

void ListSubRequest::SharedCtor() {
  my_index_ = 0;
}

ListSubRequest::~ListSubRequest() {
  // @@protoc_insertion_point(destructor:masterBackend.ListSubRequest)
  SharedDtor();
}

void ListSubRequest::SharedDtor() {
}

void ListSubRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSubRequest& ListSubRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListSubRequest_masterBackend_2eproto.base);
  return *internal_default_instance();
}


void ListSubRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:masterBackend.ListSubRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  my_index_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSubRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListSubRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 my_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_my_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSubRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:masterBackend.ListSubRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 my_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:masterBackend.ListSubRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:masterBackend.ListSubRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSubRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:masterBackend.ListSubRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 my_index = 1;
  if (this->my_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->my_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:masterBackend.ListSubRequest)
}

::google::protobuf::uint8* ListSubRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:masterBackend.ListSubRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 my_index = 1;
  if (this->my_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->my_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:masterBackend.ListSubRequest)
  return target;
}

size_t ListSubRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:masterBackend.ListSubRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 my_index = 1;
  if (this->my_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->my_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSubRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:masterBackend.ListSubRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSubRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListSubRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:masterBackend.ListSubRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:masterBackend.ListSubRequest)
    MergeFrom(*source);
  }
}

void ListSubRequest::MergeFrom(const ListSubRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:masterBackend.ListSubRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.my_index() != 0) {
    set_my_index(from.my_index());
  }
}

void ListSubRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:masterBackend.ListSubRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSubRequest::CopyFrom(const ListSubRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterBackend.ListSubRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSubRequest::IsInitialized() const {
  return true;
}

void ListSubRequest::Swap(ListSubRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSubRequest::InternalSwap(ListSubRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(my_index_, other->my_index_);
}

::google::protobuf::Metadata ListSubRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_masterBackend_2eproto);
  return ::file_level_metadata_masterBackend_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListSubReply::InitAsDefaultInstance() {
}
class ListSubReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSubReply::kSubIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSubReply::ListSubReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:masterBackend.ListSubReply)
}
ListSubReply::ListSubReply(const ListSubReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      sub_index_(from.sub_index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:masterBackend.ListSubReply)
}

void ListSubReply::SharedCtor() {
}

ListSubReply::~ListSubReply() {
  // @@protoc_insertion_point(destructor:masterBackend.ListSubReply)
  SharedDtor();
}

void ListSubReply::SharedDtor() {
}

void ListSubReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSubReply& ListSubReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListSubReply_masterBackend_2eproto.base);
  return *internal_default_instance();
}


void ListSubReply::Clear() {
// @@protoc_insertion_point(message_clear_start:masterBackend.ListSubReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sub_index_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSubReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListSubReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated int32 sub_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
          object = msg->mutable_sub_index();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        do {
          msg->add_sub_index(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSubReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:masterBackend.ListSubReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 sub_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_sub_index())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_sub_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:masterBackend.ListSubReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:masterBackend.ListSubReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSubReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:masterBackend.ListSubReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 sub_index = 1;
  if (this->sub_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_sub_index_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->sub_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->sub_index(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:masterBackend.ListSubReply)
}

::google::protobuf::uint8* ListSubReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:masterBackend.ListSubReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 sub_index = 1;
  if (this->sub_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _sub_index_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->sub_index_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:masterBackend.ListSubReply)
  return target;
}

size_t ListSubReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:masterBackend.ListSubReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 sub_index = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->sub_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _sub_index_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSubReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:masterBackend.ListSubReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSubReply* source =
      ::google::protobuf::DynamicCastToGenerated<ListSubReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:masterBackend.ListSubReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:masterBackend.ListSubReply)
    MergeFrom(*source);
  }
}

void ListSubReply::MergeFrom(const ListSubReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:masterBackend.ListSubReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sub_index_.MergeFrom(from.sub_index_);
}

void ListSubReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:masterBackend.ListSubReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSubReply::CopyFrom(const ListSubReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterBackend.ListSubReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSubReply::IsInitialized() const {
  return true;
}

void ListSubReply::Swap(ListSubReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSubReply::InternalSwap(ListSubReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  sub_index_.InternalSwap(&other->sub_index_);
}

::google::protobuf::Metadata ListSubReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_masterBackend_2eproto);
  return ::file_level_metadata_masterBackend_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PromotePrimRequest::InitAsDefaultInstance() {
}
class PromotePrimRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PromotePrimRequest::kMyIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PromotePrimRequest::PromotePrimRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:masterBackend.PromotePrimRequest)
}
PromotePrimRequest::PromotePrimRequest(const PromotePrimRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  my_index_ = from.my_index_;
  // @@protoc_insertion_point(copy_constructor:masterBackend.PromotePrimRequest)
}

void PromotePrimRequest::SharedCtor() {
  my_index_ = 0;
}

PromotePrimRequest::~PromotePrimRequest() {
  // @@protoc_insertion_point(destructor:masterBackend.PromotePrimRequest)
  SharedDtor();
}

void PromotePrimRequest::SharedDtor() {
}

void PromotePrimRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PromotePrimRequest& PromotePrimRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PromotePrimRequest_masterBackend_2eproto.base);
  return *internal_default_instance();
}


void PromotePrimRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:masterBackend.PromotePrimRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  my_index_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PromotePrimRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PromotePrimRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 my_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_my_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PromotePrimRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:masterBackend.PromotePrimRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 my_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:masterBackend.PromotePrimRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:masterBackend.PromotePrimRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PromotePrimRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:masterBackend.PromotePrimRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 my_index = 1;
  if (this->my_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->my_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:masterBackend.PromotePrimRequest)
}

::google::protobuf::uint8* PromotePrimRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:masterBackend.PromotePrimRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 my_index = 1;
  if (this->my_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->my_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:masterBackend.PromotePrimRequest)
  return target;
}

size_t PromotePrimRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:masterBackend.PromotePrimRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 my_index = 1;
  if (this->my_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->my_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PromotePrimRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:masterBackend.PromotePrimRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PromotePrimRequest* source =
      ::google::protobuf::DynamicCastToGenerated<PromotePrimRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:masterBackend.PromotePrimRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:masterBackend.PromotePrimRequest)
    MergeFrom(*source);
  }
}

void PromotePrimRequest::MergeFrom(const PromotePrimRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:masterBackend.PromotePrimRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.my_index() != 0) {
    set_my_index(from.my_index());
  }
}

void PromotePrimRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:masterBackend.PromotePrimRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PromotePrimRequest::CopyFrom(const PromotePrimRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterBackend.PromotePrimRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PromotePrimRequest::IsInitialized() const {
  return true;
}

void PromotePrimRequest::Swap(PromotePrimRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PromotePrimRequest::InternalSwap(PromotePrimRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(my_index_, other->my_index_);
}

::google::protobuf::Metadata PromotePrimRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_masterBackend_2eproto);
  return ::file_level_metadata_masterBackend_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PromotePrimReply::InitAsDefaultInstance() {
}
class PromotePrimReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PromotePrimReply::kPrimIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PromotePrimReply::PromotePrimReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:masterBackend.PromotePrimReply)
}
PromotePrimReply::PromotePrimReply(const PromotePrimReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prim_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prim_index().size() > 0) {
    prim_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prim_index_);
  }
  // @@protoc_insertion_point(copy_constructor:masterBackend.PromotePrimReply)
}

void PromotePrimReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PromotePrimReply_masterBackend_2eproto.base);
  prim_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PromotePrimReply::~PromotePrimReply() {
  // @@protoc_insertion_point(destructor:masterBackend.PromotePrimReply)
  SharedDtor();
}

void PromotePrimReply::SharedDtor() {
  prim_index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PromotePrimReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PromotePrimReply& PromotePrimReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PromotePrimReply_masterBackend_2eproto.base);
  return *internal_default_instance();
}


void PromotePrimReply::Clear() {
// @@protoc_insertion_point(message_clear_start:masterBackend.PromotePrimReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prim_index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PromotePrimReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PromotePrimReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string prim_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("masterBackend.PromotePrimReply.prim_index");
        object = msg->mutable_prim_index();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PromotePrimReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:masterBackend.PromotePrimReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string prim_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prim_index()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prim_index().data(), static_cast<int>(this->prim_index().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "masterBackend.PromotePrimReply.prim_index"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:masterBackend.PromotePrimReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:masterBackend.PromotePrimReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PromotePrimReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:masterBackend.PromotePrimReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string prim_index = 1;
  if (this->prim_index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prim_index().data(), static_cast<int>(this->prim_index().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "masterBackend.PromotePrimReply.prim_index");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->prim_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:masterBackend.PromotePrimReply)
}

::google::protobuf::uint8* PromotePrimReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:masterBackend.PromotePrimReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string prim_index = 1;
  if (this->prim_index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prim_index().data(), static_cast<int>(this->prim_index().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "masterBackend.PromotePrimReply.prim_index");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->prim_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:masterBackend.PromotePrimReply)
  return target;
}

size_t PromotePrimReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:masterBackend.PromotePrimReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string prim_index = 1;
  if (this->prim_index().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prim_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PromotePrimReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:masterBackend.PromotePrimReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PromotePrimReply* source =
      ::google::protobuf::DynamicCastToGenerated<PromotePrimReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:masterBackend.PromotePrimReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:masterBackend.PromotePrimReply)
    MergeFrom(*source);
  }
}

void PromotePrimReply::MergeFrom(const PromotePrimReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:masterBackend.PromotePrimReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.prim_index().size() > 0) {

    prim_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prim_index_);
  }
}

void PromotePrimReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:masterBackend.PromotePrimReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PromotePrimReply::CopyFrom(const PromotePrimReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterBackend.PromotePrimReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PromotePrimReply::IsInitialized() const {
  return true;
}

void PromotePrimReply::Swap(PromotePrimReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PromotePrimReply::InternalSwap(PromotePrimReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  prim_index_.Swap(&other->prim_index_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata PromotePrimReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_masterBackend_2eproto);
  return ::file_level_metadata_masterBackend_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace masterBackend
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::masterBackend::GetPrimRequest* Arena::CreateMaybeMessage< ::masterBackend::GetPrimRequest >(Arena* arena) {
  return Arena::CreateInternal< ::masterBackend::GetPrimRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::masterBackend::GetPrimReply* Arena::CreateMaybeMessage< ::masterBackend::GetPrimReply >(Arena* arena) {
  return Arena::CreateInternal< ::masterBackend::GetPrimReply >(arena);
}
template<> PROTOBUF_NOINLINE ::masterBackend::ListSubRequest* Arena::CreateMaybeMessage< ::masterBackend::ListSubRequest >(Arena* arena) {
  return Arena::CreateInternal< ::masterBackend::ListSubRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::masterBackend::ListSubReply* Arena::CreateMaybeMessage< ::masterBackend::ListSubReply >(Arena* arena) {
  return Arena::CreateInternal< ::masterBackend::ListSubReply >(arena);
}
template<> PROTOBUF_NOINLINE ::masterBackend::PromotePrimRequest* Arena::CreateMaybeMessage< ::masterBackend::PromotePrimRequest >(Arena* arena) {
  return Arena::CreateInternal< ::masterBackend::PromotePrimRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::masterBackend::PromotePrimReply* Arena::CreateMaybeMessage< ::masterBackend::PromotePrimReply >(Arena* arena) {
  return Arena::CreateInternal< ::masterBackend::PromotePrimReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
